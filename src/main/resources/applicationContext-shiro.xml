<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">
	
	<bean id="hashedCredentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="MD5"></property>
		<property name="hashIterations" value="3"></property>
		<property name="storedCredentialsHexEncoded" value="true"></property>
	 </bean>
	
	<bean id="myHibernateRealm" class="com.sharpower.shiro.MyHibernateReaml">
		<property name="userService" ref="userService"></property>
		<property name="sessionDAO" ref="sessionDAO"></property>
		<property name="credentialsMatcher" ref="hashedCredentialsMatcher"></property>
	</bean>
	
	<bean id="cachManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"></property>
	</bean>
	
	<bean id="urlPermissionResovler" class="com.sharpower.shiro.UrlPermissionResovler">
	</bean>
	
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO">
	</bean>
	
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="name" value="sid"></property>
		<property name="httpOnly" value="true"></property>
	</bean>
	
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO"></property>
		<property name="sessionIdCookie" ref="sessionIdCookie"></property>
		<property name="sessionIdCookieEnabled" value="true"></property>
		<property name="globalSessionTimeout" value="100000"></property>
		<!-- <property name="authorizer.permissionResolver" ref="urlPermissionResolver"/> -->
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref ="cachManager"></property>
		<property name="realm" ref="myHibernateRealm"></property>
		<property name="authorizer.permissionResolver" ref="urlPermissionResovler"></property>
		<property name="sessionManager" ref="sessionManager"></property>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
	
	<bean id="userOperationRecode" class="com.sharpower.shiro.OperationRecodeFilter">
		<property name="userService" ref="userService"></property>
		<property name="userOperationRecodeService" ref="userOperationRecodeService"></property>
	</bean>
	
	<bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" id="shiroFilter">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.html" />
		<property name="successUrl" value="/index.html" />
		<property name="unauthorizedUrl" value="/unauthorized.html" />
		<!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean defined will be automatically acquired and available via its beanName in chain definitions, but you can perform overrides or parent/child consolidated configuration here if you like: -->
		<!-- <property name="filters"> <util:map> <entry key="aName" value-ref="someFilterPojo"/> </util:map> </property> -->
		<property name="filterChainDefinitions">
			<value>
				/js/** = anon
				/jquery-easyui-1.5/** = anon
				/pic/** = anon
				/ajaxLogin = anon
				/logout = logout
				/ajaxFunControlRun = roles[manager],userOperationRecode
				/ajaxFunControlStop = roles[manager],userOperationRecode
				/ajaxFunControlReset = roles[manager],userOperationRecode
				/ajaxFunControlService = roles[manager],userOperationRecode
				/ajaxFunControlPowerLimit= roles[manager],userOperationRecode
				/ajaxFunControlPowerLimitCancel= roles[manager],userOperationRecode
				/easyui_manager/** = roles[manager]
				/** = authc
			</value>
		</property>
	</bean>
</beans>  
