<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<context:property-placeholder location="classpath:db.properties" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="driverClass" value="${driverClass}"></property>
		<property name="jdbcUrl" value="${jdbcUrl}"></property>

		<property name="maxPoolSize" value="${max_size}"></property>
		<property name="minPoolSize" value="${min_size}"></property>
		<property name="checkoutTimeout" value="${timeout}"></property>
		<property name="idleConnectionTestPeriod" value="${idle_test_period}"></property>
		<property name="acquireIncrement" value="${acquire_increment}"></property>
		<property name="maxStatements" value="${max_statements}"></property>
	</bean>
 
	<bean id="funDao" 
		class="com.sharpower.dao.impl.FunDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="windFarmDao" 
		class="com.sharpower.dao.impl.WindFarmDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="plcTypeDao"
		class="com.sharpower.dao.impl.PlcTypeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>	
	</bean>
	
	<bean id="variableDao"
		class="com.sharpower.dao.impl.VariableDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="variableTypeDao"
		class="com.sharpower.dao.impl.VariableTypeDaoImpl"> 
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="recodeDao"
		class="com.sharpower.dao.impl.RecodeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="funTroubleVariableDao" 
		class="com.sharpower.dao.impl.FunTroubleVariableDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="funTroubleVariableTypeDao"
		class="com.sharpower.dao.impl.FunTroubleVariableTypeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="funTroubleRecodeDao"
		class="com.sharpower.dao.impl.FunTroubleRecodeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="reportDayRecodeDao"
		class="com.sharpower.dao.impl.ReportDayRecodeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="userDao"
		class="com.sharpower.dao.impl.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="roleDao"
		class="com.sharpower.dao.impl.RoleDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="userOperationRecodeDao"
		class="com.sharpower.dao.impl.UserOperationRecodeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="funService" 
		class="com.sharpower.service.impl.FunServiceImpl">
		<property name="dao" ref="funDao"></property>
	</bean>
	
	<bean id="windFarmService" 
		class="com.sharpower.service.impl.WindFarmServiceImpl">
		<property name="dao" ref="windFarmDao"></property>
	</bean>
	
	<bean id="plcTypeService"
		class="com.sharpower.service.impl.PlcTypeServiceImpl">
		<property name="dao" ref="plcTypeDao"></property>
	</bean>
	
	<bean id="variableService"
		class="com.sharpower.service.impl.VariableServiceImpl">
		<property name="dao" ref="variableDao"></property>
	</bean>
	
	<bean id="variableTypeService"
		class="com.sharpower.service.impl.VariableTypeServiceImpl">
		<property name="dao" ref="variableTypeDao"></property>
	</bean>
   
    <bean id="funDataReadWriteBeckhoffService" 
		class="com.sharpower.beckhoff.FunDataReadWriteBeckhoffService">
    	<property name="variableTypeService" ref="variableTypeService"></property>
    	<property name="plcTypeService" ref="plcTypeService"></property>
    	<property name="variableService" ref="variableService"></property>
    </bean>
    
    <bean id="recodeService" 
    	class="com.sharpower.service.impl.RecodeServiceImpl">
    	<property name="recodeDao" ref="recodeDao"></property>
    </bean>

    <bean id="funTroubleVariableService" 
    	class="com.sharpower.service.impl.FunTroubleVariableServiceImpl">
    	<property name="dao" ref="funTroubleVariableDao"></property>
    </bean>
    
    <bean id="funTroubleVariableTypeService"
    	class="com.sharpower.service.impl.FunTroubleVariableTypeServiceImpl" >
    	<property name="dao" ref="funTroubleVariableTypeDao"></property>
    </bean>
    
    <bean id="funTroubleRecodeService"
    	class="com.sharpower.service.impl.FunTroubleRecodeServiceImpl" >
    	<property name="dao" ref="funTroubleRecodeDao"></property>
    </bean>
    
    <bean id="funTroubleBeckhoffService"
    	class="com.sharpower.beckhoff.FunTroubleBeckhoffService" >
    	<property name="plcTypeService" ref="plcTypeService"></property>
    </bean>
    
    <bean id="reportDayRecodeService"
    	class="com.sharpower.service.impl.ReportDayRecodeServiceImpl">
   		<property name="dao" ref="reportDayRecodeDao"></property>
    </bean>
    
    <bean id="userService"
    	class="com.sharpower.service.impl.UserServiceImpl">
   		<property name="dao" ref="userDao"></property>
    </bean>
    
    <bean id="roleService"
    	class="com.sharpower.service.impl.RoleServiceImpl">
    	<property name="dao" ref="roleDao"></property>	
    </bean>

    <bean id="userOperationRecodeService"
    	class="com.sharpower.service.impl.UserOperationRecodeServiceImpl">
    	<property name="dao" ref="userOperationRecodeDao"></property>	
    </bean>
        
    <bean id="FunControlServiceBeckhoffImpl"
    	class="com.sharpower.beckhoff.FunControlBeckhoffImpl">
    </bean>
    	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<property name="mappingLocations" value="classpath:com/sharpower/entity/*.hbm.xml"></property>		
	</bean>

	<bean name="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="excelFileAction"
		class="com.sharpower.action.OutputExcelFileAction"
		scope="prototype">
	</bean>
	
	<bean id="text2AudioAction"
		class="com.sharpower.action.Text2AudioAction"
		scope="prototype">
	</bean>
	
	<bean id="ajaxUserAction"
		class="com.sharpower.action.AjaxUserAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>
	
	<bean id="ajaxSessionAction"
		class="com.sharpower.action.AjaxSessionAction"
		scope="prototype">
		<property name="sessionDAO" ref="sessionDAO"></property>
	</bean>
	
	<bean id="ajaxRoleAction"
		class="com.sharpower.action.AjaxRoleAction"
		scope="prototype">
		<property name="roleService" ref="roleService"></property>
	</bean>
	
	<bean id="ajaxFunAction"
		class="com.sharpower.action.AjaxFunAction"
		scope="prototype">
		<property name="funService" ref="funService"></property>
	</bean>
	
	<bean id="ajaxVariableTypeAction"
		class="com.sharpower.action.AjaxVariableTypeAction"
		scope="prototype">
		<property name="variableTypeService" ref="variableTypeService"></property>
	</bean>
	
	<bean id="ajaxPlcTypeAction"
		class="com.sharpower.action.AjaxPlcTypeAction"
		scope="prototype">
		<property name="plcTypeService" ref="plcTypeService"></property>
	</bean>
	
	<bean id="ajaxVariableAction" 
		class="com.sharpower.action.AjaxVariableAction"
		scope="prototype">
		<property name="variableService" ref="variableService"></property>
	</bean>
	
	<bean id="ajaxRealTimeInfoAction" 
		class="com.sharpower.action.AjaxRealTimeInfoAction"
		scope="prototype">
		<property name="recodeService" ref="recodeService"></property>
		<property name="variableService" ref="variableService"></property>
		<property name="plcTypeDataQuartz" ref="data"></property>
	</bean>
	
	<bean id="ajaxFunTroubleVariableAction" 
		class="com.sharpower.action.AjaxFunTroubleVariableAction"
		scope="prototype">
		<property name="funTroubleVariableService" ref="funTroubleVariableService"></property>
	</bean>
	
	<bean id="ajaxFunTroubleVariableTypeAction" 
		class="com.sharpower.action.AjaxFunTroubleVariableTypeAction"
		scope="prototype">
		<property name="funTroubleVariableTypeService" ref="funTroubleVariableTypeService"></property>
	</bean>
	
	<bean id="ajaxFunTroublRecodeAction" 
		class="com.sharpower.action.AjaxFunTroublRecodeAction"
		scope="prototype">
		<property name="funTroubleRecodeService" ref="funTroubleRecodeService"></property>
	</bean>
	
	<bean id="ajaxReportDayRecodeAction" 
		class="com.sharpower.action.AjaxReportDayRecodeAction"
		scope="prototype">
		<property name="reportDayRecodeService" ref="reportDayRecodeService"></property>
		<property name="reportDayQuartz" ref="reportDayQuartz"></property>
	</bean>
	
	<bean id="ajaxFunControlAction" 
		class="com.sharpower.action.AjaxFunControlAction"
		scope="prototype">
		<property name="funControl" ref="FunControlServiceBeckhoffImpl"></property>
	</bean>
	
	<bean id="ajaxMainRecodeAction" 
		class="com.sharpower.action.AjaxMainRecodeAction"
		scope="prototype">
		<property name="recodeService" ref="recodeService"></property>
	</bean>
	
	<bean id="ajaxMainRecodeMapAction"
		class="com.sharpower.action.AjaxMainRecodeMapAction"
		scope="prototype">
		<property name="variableService" ref="variableService"></property>
	</bean>
	
	<bean id="ajaxUserOperationRecodeAction"
		class="com.sharpower.action.AjaxUserOperationRecodeAction"
		scope="prototype">
		<property name="userOperationRecodeService" ref="userOperationRecodeService"></property>
	</bean>
	
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="myPointcut" expression="execution(* com.sharpower.service.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />
	</aop:config>

    <bean id="data" class="com.sharpower.quartzs.DataQuartz">
    	<property name="funDataReadWriteBeckhoffService" ref="funDataReadWriteBeckhoffService"></property>
    	<property name="plcTypeService" ref="plcTypeService"></property>
    	<property name="recodeService" ref="recodeService"></property>
    	<property name="params" >
    		<map>
    			<entry key="windSpeedParam" value="0" value-type="float" />
    			<entry key="powerParam" value="1" value-type="float" />
    		</map>
    	</property>
    </bean>
    
    <bean id="troubleData" class="com.sharpower.quartzs.TroubleQuartz">
      <property name="funTroubleBeckhoffService" ref="funTroubleBeckhoffService"></property>
      <property name="funTroubleRecodeService" ref="funTroubleRecodeService"></property>
      <property name="plcTypeService" ref="plcTypeService"></property>
    </bean>
         
    <bean id="reportDayQuartz" class="com.sharpower.quartzs.ReportDayQuartz">
    	<property name="recodeService" ref="recodeService"></property>
    	<property name="reportDayRecodeService" ref="reportDayRecodeService"></property>
    </bean>
    	
	<!-- 按照PLC类型读取风机数据的任务调度 -->
    <bean id="dataRead" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
       <property name="targetObject" ref="data"></property>
       <property name="targetMethod" value="readData"></property>
	</bean>
	
	<!-- 风机数据存储的任务调度 -->
	<bean id="dataSave" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="data"></property>
		<property name="targetMethod" value="saveData"></property>
	</bean>
	
	<!-- 风机故障记录的任务调度 	-->
	<bean id="checkTrouble" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="troubleData"></property>
		<property name="targetMethod" value="checkTrouble"></property>
	</bean>
	
	<!-- 风场日报表统计任务调度 -->
	<bean id="reportDayStatistic" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="reportDayQuartz"></property>
		<property name="targetMethod" value="aotuStatistic"></property>
	</bean>   
    
    <bean id="dataReadTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="dataRead"></property>
        <property name="repeatInterval">
            <value>1000</value>
        </property>
        <property name="startDelay">
            <value>1000</value>
        </property>
    </bean> 
    
    <bean id="dataSaveTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="dataSave"></property>
        <property name="repeatInterval">
            <value>10000</value>
        </property>
        <property name="startDelay">
            <value>5000</value>
        </property>
    </bean>  

    <bean id="checkTroubleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="checkTrouble"></property>
        <property name="repeatInterval">
            <value>3000</value>
        </property>
        <property name="startDelay">
            <value>5000</value>
        </property>
    </bean>      
    
   <bean id="reportDayStatisticTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="reportDayStatistic"></property>
        <property name="cronExpression">
        	  <!-- s m h d m w(?) y(?) -->  
            <value>20 58 15 * * ?</value>
        </property>
    </bean>
    
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<property name="triggers">
    	<list>   	
    	<!-- 
    	  	<ref bean="reportDayStatisticTrigger"/>
    	 	<ref bean="checkTroubleTrigger"/>
    		<ref bean="dataSaveTrigger"/>
    	 -->
   			<ref bean="dataReadTrigger"/>
		
    	</list>
    	</property>
    </bean>    
   </beans>